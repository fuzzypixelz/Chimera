![Extern Import "putchar"]
putchar : (Char) -> Char

![Builtin Add]
-- TODO: implement infix operators through attributes.
add : (Int, Int) -> Int

![Builtin Eq]
eq : (Int, Int) -> Bool

![Builtin Len]
-- TODO: handle left-recursion in annotations; 
-- this will allow us to remove these parentheses.
-- TODO: implement parametric polymorphism; 
-- currently you have to define `len` for each array type.
len: ([]Char) -> Int

print (s : []Char) : Unit = let
    -- FIXME: function parameters are not properly shadowed.
    -- So we cannot replace `s` with `str`. This is a bug.
    loop(str : []Char, step : Int) : Unit =
        if eq(step, len(str))
        then ()
        else let 
            tmp = putchar(str[step]) 
        in 
            become loop(str, add(step, 1))
in
    loop(s, 0)

![Entry]
main () : Int = let tmp = print("Chi!\n") in 0
